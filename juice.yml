resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource


resources:



- name: doc-juice
  type: git
  source:
    branch: gh-pages
    uri: git@github.com:spearow/juice.git
    private_key: ((sirmergealot-ssh-key))
    git_config:
    - name: user.email
      value: sirmergealot@spearow.io
    - name: user.name
      value: "Sir Mergealot"

- name: pr-juice
  type: pull-request
  check_every: 10m
  source:
    repository: spearow/juice
    access_token: ((sirmergealot-github-token))
#    required_review_approvals: 1

- name: pr-rust-cudnn
  type: pull-request
  check_every: 10m
  source:
    repository: spearow/rust-cudnn
    access_token: ((sirmergealot-github-token))
#    required_review_approvals: 1

- name: pr-rust-cublas
  type: pull-request
  check_every: 10m
  source:
    repository: spearow/rust-cublas
    access_token: ((sirmergealot-github-token))
#    required_review_approvals: 1

- name: pr-rust-blas
  type: pull-request
  check_every: 10m
  source:
    repository: spearow/rust-blas
    access_token: ((sirmergealot-github-token))
#    required_review_approvals: 1

- name: juice
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/juice.git

- name: rust-cudnn
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/rust-cudnn.git

- name: rust-cublas
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/rust-cublas.git

- name: rust-blas
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/rust-blas.git



- name: container-fedora-cuda
  type: docker-image
  source:
    repository: quay.io/spearow/machine-learning-container-fedora-cuda
    username: ((quay-spearow-username))
    password: ((quay-spearow-password))
    max_concurrent_downloads: 2
    max_concurrent_uploads: 2

- name: container-fedora-default
  type: docker-image
  source:
    repository: quay.io/spearow/machine-learning-container-fedora-default
    username: ((quay-spearow-username))
    password: ((quay-spearow-password))
    max_concurrent_downloads: 2
    max_concurrent_uploads: 2

- name: container-fedora-native
  type: docker-image
  source:
    repository: quay.io/spearow/machine-learning-container-fedora-native
    username: ((quay-spearow-username))
    password: ((quay-spearow-password))
    max_concurrent_downloads: 2
    max_concurrent_uploads: 2

- name: container-fedora-opencl
  type: docker-image
  source:
    repository: quay.io/spearow/machine-learning-container-fedora-opencl
    username: ((quay-spearow-username))
    password: ((quay-spearow-password))
    max_concurrent_downloads: 2
    max_concurrent_uploads: 2



- name: container-misc
  type: docker-image
  source:
    repository: quay.io/spearow/doc-gen-container
    username: ((quay-spearow-username))
    password: ((quay-spearow-password))
    max_concurrent_downloads: 2
    max_concurrent_uploads: 2

groups:
- name: stack
  jobs:
  - test-juice
  - test-rust-blas
  - test-rust-cudnn
  - test-rust-cublas
- name: documentation
  jobs:
  - doc-juice
- name: pull-request
  jobs:
  - pr-test-juice
  - pr-test-rust-blas
  - pr-test-rust-cudnn
  - pr-test-rust-cublas

jobs:

  - name: doc-juice
    build_logs_to_retain: 5
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: rust-cudnn
      - get: rust-blas
      - get: rust-cublas
      - get: doc-juice
      - get: juice
        trigger: true
      - get: container-misc
        trigger: true

    - task: gen-greenglas-doc
      image: container-misc
      config:
        platform: linux
        inputs:
        - name: rust-blas
        - name: rust-cublas
        - name: rust-cudnn
        - name: doc-greenglas
        - name: juice
        run:
          path: sh
          args:
          - -exc
          - |
            cd juice/greenglas
            cargo doc --no-deps
            cd -
            git clone doc-greenglas doc-greenglas-updated
            rm -rf doc-greenglas-updated/*
            cp -rf greenglas/target/doc/* doc-greenglas-updated/
            cd doc-greenglas-updated
            echo "<meta http-equiv=refresh content=0;url=greenglas/index.html>" > index.html
            git config --global user.email "sirmergealot@spearow.io"
            git config --global user.name "Sir Mergealot"
            git add -A && git commit -m"doc/automatic: update" || true

    - task: gen-juice-doc
      image: container-misc
      config:
        platform: linux
        inputs:
        - name: rust-blas
        - name: rust-cublas
        - name: rust-cudnn
        - name: juice
        - name: doc-juice
        outputs:
        - name: doc-juice-updated
        run:
          path: sh
          args:
          - -exc
          - |
            cd juice
            cargo doc --no-deps
            cd doc
            mdbook build
            cd ../..

            git clone doc-juice doc-juice-updated
            rm -rf doc-juice-updated/*
            cp -rf juice/target/doc/* doc-juice-updated/
            cp -rf juice/doc/book doc-juice-updated/book
            cd doc-juice-updated
            echo "<meta http-equiv=refresh content=0;url=juice/index.html>" > index.html
            git config --global user.email "sirmergealot@spearow.io"
            git config --global user.name "Sir Mergealot"
            git add -A && git commit -m"doc/automatic: update" || true

    - put: doc-juice
      params: { repository: doc-juice-updated, force: true }

####### PR #### RUST-CUDNN ####

  - name: pr-test-rust-cudnn
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: pr-rust-cudnn
        version: every
        trigger: true
      - get: container-fedora-cuda
        trigger: true


#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: pr-rust-cudnn
        run:
          path: sh
          args:
          - -exc
          - |
            prepare
            cd cudnn-sys
            cargo b
            cargo t
            cd -
            cd cudnn
            cargo b
            cargo t
          dir: pr-rust-cudnn



####### PR #### RUST-CUBLAS ####

  - name: pr-test-rust-cublas
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: pr-rust-cublas
        trigger: true
        version: every
      - get: container-fedora-cuda
        trigger: true


#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: pr-rust-cublas
        run:
          path: sh
          args:
          - -exc
          - |
            prepare
            cd cublas-sys
            cargo b
            cargo t
            cd -
            cd cublas
            cargo b
            cargo t
          dir: pr-rust-cublas



####### PR #### RUST-BLAS ####

  - name: pr-test-rust-blas
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: pr-rust-blas
        trigger: true
        version: every
      - get: container-fedora-native
        trigger: true

    - put: pr-rust-blas-stat
      resource: pr-rust-blas
      params:
        path: pr-rust-blas
        status: pending

    - task: test-fedora-native
      image: container-fedora-native
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: pr-rust-blas
        run:
          path: sh
          args:
          - -exc
          - |
            prepare
            cargo b
            cargo t

          dir: pr-rust-blas

      on_failure:
        put: pr-rust-blas-stat
        resource: pr-rust-blas
        params:
          path: pr-rust-blas
          status: failure


    - put: pr-rust-blas-stat
      resource: pr-rust-blas
      params:
        path: pr-rust-blas
        status: success


####### PR #### JUICE ####
  - name: pr-test-juice
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: rust-cudnn
      - get: rust-blas
      - get: rust-cublas
      - get: pr-juice
        trigger: true
        version: every
      - get: container-fedora-cuda
        trigger: true

      - get: container-fedora-default
        trigger: true

      - get: container-fedora-native
        trigger: true

      - get: container-fedora-opencl
        trigger: true


    - put: pr-juice-stat
      resource: pr-juice
      params:
        path: pr-juice
        status: pending

#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: pr-juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo build --no-default-features --features=native,cuda
          dir: pr-juice

      on_failure:
        put: pr-juice-stat
        resource: pr-juice
        params:
          path: pr-juice
          status: failure


#      tags: [cuda, nv-compute-cap-3.5, opencl]
    - task: test-fedora-default
      image: container-fedora-default
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: pr-juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test
          dir: pr-juice

      on_failure:
        put: pr-juice-stat
        resource: pr-juice
        params:
          path: pr-juice
          status: failure


    - task: test-fedora-native
      image: container-fedora-native
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: pr-juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test --no-default-features --features=native
          dir: pr-juice

      on_failure:
        put: pr-juice-stat
        resource: pr-juice
        params:
          path: pr-juice
          status: failure


#      tags: [opencl]
    - task: test-fedora-opencl
      image: container-fedora-opencl
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: pr-juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test --no-default-features --features=native,opencl
          dir: pr-juice

      on_failure:
        put: pr-juice-stat
        resource: pr-juice
        params:
          path: pr-juice
          status: failure


    - put: pr-juice-stat
      resource: pr-juice
      params:
        path: pr-juice
        status: success


  - name: test-rust-cudnn
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: rust-cudnn
        trigger: true
      - get: container-fedora-cuda
        trigger: true


#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        run:
          path: sh
          args:
          - -exc
          - |
            prepare
            cd cudnn-sys
            cargo b
            cargo t
            cd -
            cd cudnn
            cargo b
            cargo t
          dir: rust-cudnn


  - name: test-rust-cublas
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: rust-cublas
        trigger: true
      - get: container-fedora-cuda
        trigger: true


#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cublas
        run:
          path: sh
          args:
          - -exc
          - |
            prepare
            cd cublas-sys
            cargo b
            cargo t
            cd -
            cd cublas
            cargo b
            cargo t
          dir: rust-cublas


  - name: test-rust-blas
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: rust-blas
        trigger: true
      - get: container-fedora-native
        trigger: true


    - task: test-fedora-native
      image: container-fedora-native
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-blas
        run:
          path: sh
          args:
          - -exc
          - |
            prepare
            cargo b
            cargo t

          dir: rust-blas


#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: greenglas
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo build --no-default-features --features=native,cuda
          dir: greenglas


#      tags: [cuda, nv-compute-cap-3.5, opencl]
    - task: test-fedora-default
      image: container-fedora-default
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: greenglas
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test
          dir: greenglas


    - task: test-fedora-native
      image: container-fedora-native
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: greenglas
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test --no-default-features --features=native
          dir: greenglas


#      tags: [opencl]
    - task: test-fedora-opencl
      image: container-fedora-opencl
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: greenglas
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test --no-default-features --features=native,opencl
          dir: greenglas


  - name: test-juice
    build_logs_to_retain: 4
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: rust-cudnn
      - get: rust-blas
      - get: rust-cublas
      - get: juice
        trigger: true
      - get: container-fedora-cuda
        trigger: true

      - get: container-fedora-default
        trigger: true

      - get: container-fedora-native
        trigger: true

      - get: container-fedora-opencl
        trigger: true


#      tags: [cuda, nv-compute-cap-3.5]
    - task: build-fedora-cuda
      image: container-fedora-cuda
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo build --no-default-features --features=native,cuda
          dir: juice


#      tags: [cuda, nv-compute-cap-3.5, opencl]
    - task: test-fedora-default
      image: container-fedora-default
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test
          dir: juice


    - task: test-fedora-native
      image: container-fedora-native
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test --no-default-features --features=native
          dir: juice


#      tags: [opencl]
    - task: test-fedora-opencl
      image: container-fedora-opencl
      # privileged: true
      config:
        platform: linux
        inputs:
        - name: rust-cudnn
        - name: rust-blas
        - name: rust-cublas
        - name: juice
        caches:
        - path: target
        run:
          path: sh
          args:
          - -exc
          - |

            function toml_path_array {  
                local pre="[\""
                local post="\"]"
                local first=${1}
                local d='","'
                shift
                echo -n "${pre}"
                echo -n "${first}"
                printf "%s" "${@/#/$d}";
                echo -n "${post}"
            }


            function sanitize_paths {
                for item in ${*}; do
                    dirname $(realpath ${item})
                done
            }

            toml_path_array $(sanitize_paths $(fd --absolute-path Cargo.toml ../..))            prepare
            cargo test --no-default-features --features=native,opencl
          dir: juice
