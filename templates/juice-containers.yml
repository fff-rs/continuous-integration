resources:
- name: git-ci
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/continuous-integration.git

{% include "container-resources.yml" %}
{# include "container-resources-preload.yml" #}


groups:
  {% for testenv in testenvs %}
  - name: {{ testenv.name.as_str() }}
    jobs:
  {% for backend in testenv.backends %}
      - create-oci-{{ testenv.name }}-{{ backend }}
  {%- endfor %}
  {%- endfor %}

  - name: misc
    jobs:
      - create-oci-misc

jobs:
  - name: create-oci-misc
    serial_groups: [constructors]
    build_logs_to_retain: 2
    serial: true
    plan:
    - get: ci
      resource: git-ci
      trigger: true

    - task: composition
      privileged: true

      config:
        platform: linux

        image_resource:
          type: registry-image
          source:
            repository: vito/oci-build-task

        params:
          CONTEXT: copycat
          TAG: latest

        inputs:
        - name: ci

        outputs:
        - name: image
        - name: copycat

        caches:
        - path: copycat

        run:
          path: sh
          args:
          - -exc
          - |
            cp -rfv ci/container/misc/Dockerfile ./copycat/
            cp -rfv ci/container/misc ./copycat/
            cp -rfv ci/container/*.sh ./copycat/
            pwd
            build

    - put: container-misc
      params:
        image: copycat/image/image.tar



{% for testenv in testenvs %}
{% for backend in testenv.backends %}
  - name: create-oci-{{ testenv.name }}-{{ backend }}
    serial_groups: [constructors]
    build_logs_to_retain: 2
    serial: true
    plan:
    - get: ci
      resource: git-ci
      trigger: true

    - task: composition
      privileged: true
      {% include "container-tags2.yml" %}

      config:
        platform: linux

        image_resource:
          type: registry-image
          source:
            repository: vito/oci-build-task

        params:
          CONTEXT: copycat
          TAG: latest

        inputs:
        - name: ci

        outputs:
        - name: image
        - name: copycat

        caches:
        - path: copycat

        run:
          path: sh
          args:
          - -exc
          - |
            cp -rfv ci/container/{{ testenv.name }} ./copycat/
            cp -rfv ci/container/{{ testenv.name }}/{{ backend }}/Dockerfile ./copycat/
            cp -rfv ci/container/*.sh ./copycat/
            pwd
            build

          dir: copycat

    - put: container-{{ testenv.name }}-{{ backend }}
      params:
        image: copycat/image/image.tar

{%- endfor %}
{%- endfor %}
