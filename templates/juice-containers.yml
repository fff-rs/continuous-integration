resources:
- name: git-ci
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/continuous-integration.git

{% include "container-resources.yml" %}
{% include "container-resources-preload.yml" %}

# groups:
  # {% for testenv in testenvs %}
  # - name: {{ testenv.as_str() }}
  #   jobs:
  #     - create-oci-{{ testenv.as_str() }}-base
  # {% for backend in testenv.backends %}
  #     - create-oci-{{ testenv.as_str() }}-{{ backend }}
  # {%- endfor %}
  # {%- endfor %}

  # - name: misc
  #   jobs:
  #     - create-oci-misc


jobs:
{% for testenv in testenvs %}
  - name: create-oci-{{ testenv }}-base
    build_log_retention: { days: 60, builds: 2 }
    serial: true
    plan:
    - get: ci
      resource: git-ci
      trigger: true

    - task: composition
      privileged: true

      config:
        platform: linux

        image_resource:
          type: registry-image
          source:
            repository: vito/oci-build-task

        params:
          CONTEXT: ci/container
          DOCKERFILE: ci/container/{{ testenv }}/Dockerfile
          TAG: latest

        inputs:
        - name: ci

        outputs:
        - name: image
        - name: copycat

        caches:
        - path: cache

        run:
          path: sh
          args:
          - -exc
          - |
            pwd
            build

    - put: container-{{ testenv }}-base
      params:
        image: image/image.tar

{% for backend in testenv.backends %}
  - name: create-oci-{{ testenv }}-{{ backend }}
    serial_groups: [constructors]
    build_log_retention: { days: 60, builds: 2 }
    serial: true
    plan:
    - get: ci
      resource: git-ci
      passed: [create-oci-{{ testenv }}-base]
      trigger: true

    # - get: base
    #   resource: container-{{ testenv }}-base
    #   passed: [create-oci-{{ testenv }}-base]
    #   trigger: true

    - task: composition
      privileged: true

      config:
        platform: linux

        image_resource:
          type: registry-image
          source:
            repository: vito/oci-build-task

        params:
          CONTEXT: ci/container
          DOCKERFILE: ci/container/{{ testenv }}/{{ backend }}/Dockerfile
          TAG: latest

        inputs:
        - name: ci

        outputs:
        - name: image
        - name: copycat

        caches:
        - path: cache

        run:
          path: sh
          args:
          - -exc
          - |
            pwd
            build

    - put: container-{{ testenv }}-{{ backend }}
      params:
        image: image/image.tar

{%- endfor %}
{%- endfor %}

  - name: create-oci-fedora-misc
    build_log_retention: { days: 60, builds: 2 }
    serial: true
    plan:
    - get: ci
      resource: git-ci
      passed: [create-oci-fedora-base]
      trigger: true

    - task: composition
      privileged: true

      config:
        platform: linux

        image_resource:
          type: registry-image
          source:
            repository: vito/oci-build-task

        params:
          CONTEXT: copycat
          TAG: latest

        inputs:
        - name: ci

        outputs:
        - name: image
        - name: copycat

        caches:
        - path: cache

        run:
          path: sh
          args:
          - -exc
          - |
            cp -rfv ci/container/misc/Dockerfile ./copycat/
            cp -rfv ci/container/misc ./copycat/
            cp -rfv ci/container/*.sh ./copycat/
            pwd
            build

    - put: container-misc
      params:
        image: image/image.tar
